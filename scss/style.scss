@import "bourbon/bourbon";

iframe {
    top: -150%;
    position: fixed;
}

body {
    margin: 0;
    padding: 0;
    border: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
}

#controls {
    color: #fff;
    font-family: 'Helvetica Neueu', sans-serif;
    background-color: #555555;
    position: absolute;
    width: 100%;
    height: 35px;
    z-index: 9999;
    padding: 5px;
    overflow: hidden;
    @include transition(height 0.3s ease);

    &.hidden {
        height: 0;
    }
}

.hide, .show {
    background-color: #555555;
    position: absolute;
    right: 20px;
    top: 15px;
    cursor: hand;
    cursor: pointer;
}

#controls h1,form {
    display: inline-block;
}

#controls form {
    vertical-align: text-bottom;
}

#controls h1 {
    font-style: italic;
    margin: 0px 20px 0px 0px;
}

#controls button {
    @include button;
}

#controls form button, input {
    height: 25px;
    margin: 0px;
    font-weight: bold;
    font-size: 16px;
    padding: 0px 5px;
}

.active, .ondeck {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
}

.active {
    background-color: white;
}

.ondeck {
    z-index: -1;
}

/* spotlight */
.spotlight {
    background-repeat: no-repeat;
    background-position: center;

    width: 100%;
    height: 100%;
}

/* vortex */
.vortex-core, .vortex, .vortex-row {
    background-repeat: no-repeat;
    background-position: center;
    background-size: cover;

    margin: auto;
    position: absolute;
    @include transform(translate(-50%, -50%));
    top: 50%; left: 50%;
}

.vortex, .vortex-core {
    border-radius: 100%;
}

@mixin vortex-loop($num, $offset) {
    @for $i from 1 through $num {
        .vortex:nth-child(#{$i}) {
            @include transform(translate($offset,  0) rotate(($i - 1) * (360deg/$num)));
            @include transform-origin(-$offset 0);
        }
    }
}

.vortex {
    width: 200px;
    height: 200px;
    transition: transform 10s linear;
}


@for $i from 1 through 4 {
    $j: $i - 1;
    span.vortex-row:nth-of-type(#{$i}) {
        height: auto;
        @include vortex-loop(($i + 1) * 2, 105px + (215px * $j))
    }
}

// Vortex animation

//Pan left

.panLeft {
    @include animation(panLeft 10s infinite linear);
    background-repeat: horizontal;
    background-position: 0 0;
}

@include keyframes(panLeft) {
    to {background-position: -100% 0;}
}

/* Pan right */
.panRight {
    @include animation(panRight 10s infinite linear);
    background-repeat: horizontal;
    background-position: 0 0;
}
@include keyframes(panRight) {
    to {background-position: 100% 0;}
}

// DA CUBE

.cubeContainer {
    @include perspective(1000px);
}

.cube {
    width: 200px;
    height: 200px;
    position: absolute;
    @include transition(transform 3s);

    @include transform-style(preserve-3d);

    .cubeFace {
        width: 196px;
        height: 196px;
        background-repeat: no-repeat;
        background-size: cover;
        display: block;
        position: absolute;
        border: 1px solid black;
    }

    .cubeFace:nth-of-type(1) { @include transform(rotateY(0deg) translateZ(100px)); }
    .cubeFace:nth-of-type(2) { @include transform(rotateX(180deg) translateZ(100px)); }
    .cubeFace:nth-of-type(3) { @include transform(rotateY(90deg) translateZ(100px)); }
    .cubeFace:nth-of-type(4) { @include transform(rotateY(-90deg) translateZ(100px)); }
    .cubeFace:nth-of-type(5) { @include transform(rotateX(90deg) translateZ(100px)); }
    .cubeFace:nth-of-type(6) { @include transform(rotateX(-90deg) translateZ(100px)); }

    &.spinOne {
        @include animation(spinOne 3s infinite linear);
    }

    &.spinTwo {
        @include animation(spinTwo 3s infinite linear);
    }
}

@include keyframes(spinOne) {
    0% {@include transform(translateZ( -100px ) rotateY(0deg) rotateX(0deg));}
    50% {@include transform(translateZ( -100px ) rotateY(180deg) rotateX(180deg));}
    100% {@include transform(translateZ( -100px ) rotateY(360deg) rotateX(360deg));}
}

@include keyframes(spinTwo) {
    0% {@include transform(translateZ( -100px ) rotateY(0deg) rotateX(0deg));}
    50% {@include transform(translateZ( -100px ) rotateY(-180deg) rotateX(-180deg));}
    100% {@include transform(translateZ( -100px ) rotateY(-360deg) rotateX(-360deg));}
}
